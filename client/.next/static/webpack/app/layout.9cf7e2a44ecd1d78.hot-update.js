"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/store/useStore.ts":
/*!*******************************!*\
  !*** ./src/store/useStore.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSavedInsights: function() { return /* binding */ useSavedInsights; },\n/* harmony export */   useSavedInsightsActions: function() { return /* binding */ useSavedInsightsActions; },\n/* harmony export */   useSearchActions: function() { return /* binding */ useSearchActions; },\n/* harmony export */   useSearchState: function() { return /* binding */ useSearchState; },\n/* harmony export */   useStore: function() { return /* binding */ useStore; },\n/* harmony export */   useUIActions: function() { return /* binding */ useUIActions; },\n/* harmony export */   useUIState: function() { return /* binding */ useUIState; },\n/* harmony export */   useWorkspaceActions: function() { return /* binding */ useWorkspaceActions; },\n/* harmony export */   useWorkspaceState: function() { return /* binding */ useWorkspaceState; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n\n\nconst initialSearchState = {\n    query: \"\",\n    results: [],\n    loading: false,\n    error: null\n};\nconst initialWorkspaceState = {\n    currentVideo: null,\n    transcript: [],\n    isProcessing: false,\n    isProcessed: false,\n    ragReady: false,\n    chatMessages: []\n};\nconst useStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.devtools)((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.persist)((set, get)=>({\n        search: initialSearchState,\n        setSearchQuery: (query)=>set((state)=>({\n                    search: {\n                        ...state.search,\n                        query\n                    }\n                })),\n        setSearchResults: (results)=>set((state)=>({\n                    search: {\n                        ...state.search,\n                        results\n                    }\n                })),\n        setSearchLoading: (loading)=>set((state)=>({\n                    search: {\n                        ...state.search,\n                        loading\n                    }\n                })),\n        setSearchError: (error)=>set((state)=>({\n                    search: {\n                        ...state.search,\n                        error\n                    }\n                })),\n        clearSearch: ()=>set({\n                search: initialSearchState\n            }),\n        workspace: initialWorkspaceState,\n        setCurrentVideo: (currentVideo)=>set((state)=>({\n                    workspace: {\n                        ...state.workspace,\n                        currentVideo\n                    }\n                })),\n        setTranscript: (transcript)=>set((state)=>({\n                    workspace: {\n                        ...state.workspace,\n                        transcript\n                    }\n                })),\n        setIsProcessing: (isProcessing)=>set((state)=>({\n                    workspace: {\n                        ...state.workspace,\n                        isProcessing\n                    }\n                })),\n        setIsProcessed: (isProcessed)=>set((state)=>({\n                    workspace: {\n                        ...state.workspace,\n                        isProcessed\n                    }\n                })),\n        setRagReady: (ragReady)=>set((state)=>({\n                    workspace: {\n                        ...state.workspace,\n                        ragReady\n                    }\n                })),\n        addChatMessage: (message)=>{\n            const newMessage = {\n                ...message,\n                id: Date.now().toString(),\n                timestamp: new Date()\n            };\n            set((state)=>({\n                    workspace: {\n                        ...state.workspace,\n                        chatMessages: [\n                            ...state.workspace.chatMessages,\n                            newMessage\n                        ]\n                    }\n                }));\n        },\n        updateLastMessage: (updates)=>{\n            set((state)=>{\n                const messages = [\n                    ...state.workspace.chatMessages\n                ];\n                if (messages.length > 0) {\n                    messages[messages.length - 1] = {\n                        ...messages[messages.length - 1],\n                        ...updates\n                    };\n                }\n                return {\n                    workspace: {\n                        ...state.workspace,\n                        chatMessages: messages\n                    }\n                };\n            });\n        },\n        clearChat: ()=>set((state)=>({\n                    workspace: {\n                        ...state.workspace,\n                        chatMessages: []\n                    }\n                })),\n        clearWorkspace: ()=>set({\n                workspace: initialWorkspaceState\n            }),\n        ui: {\n            theme: \"light\",\n            sidebarOpen: false,\n            currentPlayer: {\n                isPlaying: false,\n                currentTime: 0,\n                duration: 0\n            }\n        },\n        setTheme: (theme)=>set((state)=>({\n                    ui: {\n                        ...state.ui,\n                        theme\n                    }\n                })),\n        setSidebarOpen: (sidebarOpen)=>set((state)=>({\n                    ui: {\n                        ...state.ui,\n                        sidebarOpen\n                    }\n                })),\n        setPlayerState: (playerState)=>set((state)=>({\n                    ui: {\n                        ...state.ui,\n                        currentPlayer: {\n                            ...state.ui.currentPlayer,\n                            ...playerState\n                        }\n                    }\n                })),\n        savedInsights: [],\n        addSavedInsight: (insight)=>{\n            const newInsight = {\n                ...insight,\n                id: Date.now().toString(),\n                timestamp: new Date().toISOString()\n            };\n            set((state)=>({\n                    savedInsights: [\n                        newInsight,\n                        ...state.savedInsights\n                    ]\n                }));\n        },\n        removeSavedInsight: (id)=>set((state)=>({\n                    savedInsights: state.savedInsights.filter((insight)=>insight.id !== id)\n                })),\n        clearSavedInsights: ()=>set({\n                savedInsights: []\n            })\n    }), {\n    name: \"podsearch-storage\",\n    partialize: (state)=>({\n            savedInsights: state.savedInsights,\n            ui: {\n                theme: state.ui.theme\n            }\n        }),\n    skipHydration: true\n}), {\n    name: \"PodSearch Store\"\n}));\nconst useSearchState = ()=>useStore((state)=>state.search);\nconst useWorkspaceState = ()=>useStore((state)=>state.workspace);\nconst useUIState = ()=>useStore((state)=>state.ui);\nconst useSavedInsights = ()=>useStore((state)=>state.savedInsights);\nconst useSearchActions = ()=>({\n        setSearchQuery: useStore((state)=>state.setSearchQuery),\n        setSearchResults: useStore((state)=>state.setSearchResults),\n        setSearchLoading: useStore((state)=>state.setSearchLoading),\n        setSearchError: useStore((state)=>state.setSearchError),\n        clearSearch: useStore((state)=>state.clearSearch)\n    });\nconst useWorkspaceActions = ()=>({\n        setCurrentVideo: useStore((state)=>state.setCurrentVideo),\n        setTranscript: useStore((state)=>state.setTranscript),\n        setIsProcessing: useStore((state)=>state.setIsProcessing),\n        setIsProcessed: useStore((state)=>state.setIsProcessed),\n        setRagReady: useStore((state)=>state.setRagReady),\n        addChatMessage: useStore((state)=>state.addChatMessage),\n        updateLastMessage: useStore((state)=>state.updateLastMessage),\n        clearChat: useStore((state)=>state.clearChat),\n        clearWorkspace: useStore((state)=>state.clearWorkspace)\n    });\nconst useUIActions = ()=>({\n        setTheme: useStore((state)=>state.setTheme),\n        setSidebarOpen: useStore((state)=>state.setSidebarOpen),\n        setPlayerState: useStore((state)=>state.setPlayerState)\n    });\nconst useSavedInsightsActions = ()=>({\n        addSavedInsight: useStore((state)=>state.addSavedInsight),\n        removeSavedInsight: useStore((state)=>state.removeSavedInsight),\n        clearSavedInsights: useStore((state)=>state.clearSavedInsights)\n    });\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/useStore.ts\n"));

/***/ })

});